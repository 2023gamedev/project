//// Generated by the protocol buffer compiler.  DO NOT EDIT!
//// source: Protocol.proto
//// Protobuf C++ Version: 5.26.0-rc1
//
//#ifndef GOOGLE_PROTOBUF_INCLUDED_Protocol_2eproto_2epb_2eh
//#define GOOGLE_PROTOBUF_INCLUDED_Protocol_2eproto_2epb_2eh
//
//#include <limits>
//#include <string>
//#include <type_traits>
//#include <utility>
//
//#include "google/protobuf/port_def.inc"
//#if PROTOBUF_VERSION != 5026000
//#error "Protobuf C++ gencode is built with an incompatible version of"
//#error "Protobuf C++ headers/runtime. See"
//#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
//#endif
//#include "google/protobuf/port_undef.inc"
//#include "google/protobuf/io/coded_stream.h"
//#include "google/protobuf/arena.h"
//#include "google/protobuf/arenastring.h"
//#include "google/protobuf/generated_message_tctable_decl.h"
//#include "google/protobuf/generated_message_util.h"
//#include "google/protobuf/metadata_lite.h"
//#include "google/protobuf/generated_message_reflection.h"
//#include "google/protobuf/message.h"
//#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
//#include "google/protobuf/extension_set.h"  // IWYU pragma: export
//#include "google/protobuf/unknown_field_set.h"
//// @@protoc_insertion_point(includes)
//
//// Must be included last.
//#include "google/protobuf/port_def.inc"
//
//#define PROTOBUF_INTERNAL_EXPORT_Protocol_2eproto
//
//namespace google {
//namespace protobuf {
//namespace internal {
//class AnyMetadata;
//}  // namespace internal
//}  // namespace protobuf
//}  // namespace google
//
//// Internal implementation detail -- do not use these members.
//struct TableStruct_Protocol_2eproto {
//  static const ::uint32_t offsets[];
//};
//extern const ::google::protobuf::internal::DescriptorTable
//    descriptor_table_Protocol_2eproto;
//namespace Protocol {
//class BuffData;
//struct BuffDataDefaultTypeInternal;
//extern BuffDataDefaultTypeInternal _BuffData_default_instance_;
//class S_TEST;
//struct S_TESTDefaultTypeInternal;
//extern S_TESTDefaultTypeInternal _S_TEST_default_instance_;
//}  // namespace Protocol
//namespace google {
//namespace protobuf {
//}  // namespace protobuf
//}  // namespace google
//
//namespace Protocol {
//
//// ===================================================================
//
//
//// -------------------------------------------------------------------
//
//class BuffData final : public ::google::protobuf::Message
///* @@protoc_insertion_point(class_definition:Protocol.BuffData) */ {
// public:
//  inline BuffData() : BuffData(nullptr) {}
//  ~BuffData() override;
//  template <typename = void>
//  explicit PROTOBUF_CONSTEXPR BuffData(
//      ::google::protobuf::internal::ConstantInitialized);
//
//  inline BuffData(const BuffData& from) : BuffData(nullptr, from) {}
//  inline BuffData(BuffData&& from) noexcept
//      : BuffData(nullptr, std::move(from)) {}
//  inline BuffData& operator=(const BuffData& from) {
//    CopyFrom(from);
//    return *this;
//  }
//  inline BuffData& operator=(BuffData&& from) noexcept {
//    if (this == &from) return *this;
//    if (GetArena() == from.GetArena()
//#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
//        && GetArena() != nullptr
//#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
//    ) {
//      InternalSwap(&from);
//    } else {
//      CopyFrom(from);
//    }
//    return *this;
//  }
//
//  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
//      ABSL_ATTRIBUTE_LIFETIME_BOUND {
//    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
//  }
//  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
//      ABSL_ATTRIBUTE_LIFETIME_BOUND {
//    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
//  }
//
//  static const ::google::protobuf::Descriptor* descriptor() {
//    return GetDescriptor();
//  }
//  static const ::google::protobuf::Descriptor* GetDescriptor() {
//    return default_instance().GetMetadata().descriptor;
//  }
//  static const ::google::protobuf::Reflection* GetReflection() {
//    return default_instance().GetMetadata().reflection;
//  }
//  static const BuffData& default_instance() {
//    return *internal_default_instance();
//  }
//  static inline const BuffData* internal_default_instance() {
//    return reinterpret_cast<const BuffData*>(
//        &_BuffData_default_instance_);
//  }
//  static constexpr int kIndexInFileMessages = 0;
//  friend void swap(BuffData& a, BuffData& b) { a.Swap(&b); }
//  inline void Swap(BuffData* other) {
//    if (other == this) return;
//#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
//    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
//#else   // PROTOBUF_FORCE_COPY_IN_SWAP
//    if (GetArena() == other->GetArena()) {
//#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
//      InternalSwap(other);
//    } else {
//      ::google::protobuf::internal::GenericSwap(this, other);
//    }
//  }
//  void UnsafeArenaSwap(BuffData* other) {
//    if (other == this) return;
//    ABSL_DCHECK(GetArena() == other->GetArena());
//    InternalSwap(other);
//  }
//
//  // implements Message ----------------------------------------------
//
//  BuffData* New(::google::protobuf::Arena* arena = nullptr) const final {
//    return ::google::protobuf::Message::DefaultConstruct<BuffData>(arena);
//  }
//  using ::google::protobuf::Message::CopyFrom;
//  void CopyFrom(const BuffData& from);
//  using ::google::protobuf::Message::MergeFrom;
//  void MergeFrom(const BuffData& from) { BuffData::MergeImpl(*this, from); }
//
//  private:
//  static void MergeImpl(
//      ::google::protobuf::MessageLite& to_msg,
//      const ::google::protobuf::MessageLite& from_msg);
//
//  public:
//  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
//  bool IsInitialized() const final;
//
//  ::size_t ByteSizeLong() const final;
//  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
//  ::uint8_t* _InternalSerialize(
//      ::uint8_t* target,
//      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
//  int GetCachedSize() const { return _impl_._cached_size_.Get(); }
//
//  private:
//  void SharedCtor(::google::protobuf::Arena* arena);
//  void SharedDtor();
//  void InternalSwap(BuffData* other);
// private:
//  friend class ::google::protobuf::internal::AnyMetadata;
//  static ::absl::string_view FullMessageName() { return "Protocol.BuffData"; }
//
// protected:
//  explicit BuffData(::google::protobuf::Arena* arena);
//  BuffData(::google::protobuf::Arena* arena, const BuffData& from);
//  BuffData(::google::protobuf::Arena* arena, BuffData&& from) noexcept
//      : BuffData(arena) {
//    *this = ::std::move(from);
//  }
//  const ::google::protobuf::MessageLite::ClassData* GetClassData()
//      const final;
//
// public:
//  ::google::protobuf::Metadata GetMetadata() const final;
//  // nested types ----------------------------------------------------
//
//  // accessors -------------------------------------------------------
//  enum : int {
//    kVictimsFieldNumber = 3,
//    kBuffIdFieldNumber = 1,
//    kRemainTimeFieldNumber = 2,
//  };
//  // repeated uint64 victims = 3;
//  int victims_size() const;
//  private:
//  int _internal_victims_size() const;
//
//  public:
//  void clear_victims() ;
//  ::uint64_t victims(int index) const;
//  void set_victims(int index, ::uint64_t value);
//  void add_victims(::uint64_t value);
//  const ::google::protobuf::RepeatedField<::uint64_t>& victims() const;
//  ::google::protobuf::RepeatedField<::uint64_t>* mutable_victims();
//
//  private:
//  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_victims() const;
//  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_victims();
//
//  public:
//  // uint64 buffId = 1;
//  void clear_buffid() ;
//  ::uint64_t buffid() const;
//  void set_buffid(::uint64_t value);
//
//  private:
//  ::uint64_t _internal_buffid() const;
//  void _internal_set_buffid(::uint64_t value);
//
//  public:
//  // float remainTime = 2;
//  void clear_remaintime() ;
//  float remaintime() const;
//  void set_remaintime(float value);
//
//  private:
//  float _internal_remaintime() const;
//  void _internal_set_remaintime(float value);
//
//  public:
//  // @@protoc_insertion_point(class_scope:Protocol.BuffData)
// private:
//  class _Internal;
//  friend class ::google::protobuf::internal::TcParser;
//  static const ::google::protobuf::internal::TcParseTable<
//      2, 3, 0,
//      0, 2>
//      _table_;
//  friend class ::google::protobuf::MessageLite;
//  friend class ::google::protobuf::Arena;
//  template <typename T>
//  friend class ::google::protobuf::Arena::InternalHelper;
//  using InternalArenaConstructable_ = void;
//  using DestructorSkippable_ = void;
//  struct Impl_ {
//    inline explicit constexpr Impl_(
//        ::google::protobuf::internal::ConstantInitialized) noexcept;
//    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
//                          ::google::protobuf::Arena* arena);
//    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
//                          ::google::protobuf::Arena* arena, const Impl_& from);
//    ::google::protobuf::RepeatedField<::uint64_t> victims_;
//    mutable ::google::protobuf::internal::CachedSize _victims_cached_byte_size_;
//    ::uint64_t buffid_;
//    float remaintime_;
//    mutable ::google::protobuf::internal::CachedSize _cached_size_;
//    PROTOBUF_TSAN_DECLARE_MEMBER
//  };
//  union { Impl_ _impl_; };
//  friend struct ::TableStruct_Protocol_2eproto;
//};
//// -------------------------------------------------------------------
//
//class S_TEST final : public ::google::protobuf::Message
///* @@protoc_insertion_point(class_definition:Protocol.S_TEST) */ {
// public:
//  inline S_TEST() : S_TEST(nullptr) {}
//  ~S_TEST() override;
//  template <typename = void>
//  explicit PROTOBUF_CONSTEXPR S_TEST(
//      ::google::protobuf::internal::ConstantInitialized);
//
//  inline S_TEST(const S_TEST& from) : S_TEST(nullptr, from) {}
//  inline S_TEST(S_TEST&& from) noexcept
//      : S_TEST(nullptr, std::move(from)) {}
//  inline S_TEST& operator=(const S_TEST& from) {
//    CopyFrom(from);
//    return *this;
//  }
//  inline S_TEST& operator=(S_TEST&& from) noexcept {
//    if (this == &from) return *this;
//    if (GetArena() == from.GetArena()
//#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
//        && GetArena() != nullptr
//#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
//    ) {
//      InternalSwap(&from);
//    } else {
//      CopyFrom(from);
//    }
//    return *this;
//  }
//
//  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
//      ABSL_ATTRIBUTE_LIFETIME_BOUND {
//    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
//  }
//  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
//      ABSL_ATTRIBUTE_LIFETIME_BOUND {
//    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
//  }
//
//  static const ::google::protobuf::Descriptor* descriptor() {
//    return GetDescriptor();
//  }
//  static const ::google::protobuf::Descriptor* GetDescriptor() {
//    return default_instance().GetMetadata().descriptor;
//  }
//  static const ::google::protobuf::Reflection* GetReflection() {
//    return default_instance().GetMetadata().reflection;
//  }
//  static const S_TEST& default_instance() {
//    return *internal_default_instance();
//  }
//  static inline const S_TEST* internal_default_instance() {
//    return reinterpret_cast<const S_TEST*>(
//        &_S_TEST_default_instance_);
//  }
//  static constexpr int kIndexInFileMessages = 1;
//  friend void swap(S_TEST& a, S_TEST& b) { a.Swap(&b); }
//  inline void Swap(S_TEST* other) {
//    if (other == this) return;
//#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
//    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
//#else   // PROTOBUF_FORCE_COPY_IN_SWAP
//    if (GetArena() == other->GetArena()) {
//#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
//      InternalSwap(other);
//    } else {
//      ::google::protobuf::internal::GenericSwap(this, other);
//    }
//  }
//  void UnsafeArenaSwap(S_TEST* other) {
//    if (other == this) return;
//    ABSL_DCHECK(GetArena() == other->GetArena());
//    InternalSwap(other);
//  }
//
//  // implements Message ----------------------------------------------
//
//  S_TEST* New(::google::protobuf::Arena* arena = nullptr) const final {
//    return ::google::protobuf::Message::DefaultConstruct<S_TEST>(arena);
//  }
//  using ::google::protobuf::Message::CopyFrom;
//  void CopyFrom(const S_TEST& from);
//  using ::google::protobuf::Message::MergeFrom;
//  void MergeFrom(const S_TEST& from) { S_TEST::MergeImpl(*this, from); }
//
//  private:
//  static void MergeImpl(
//      ::google::protobuf::MessageLite& to_msg,
//      const ::google::protobuf::MessageLite& from_msg);
//
//  public:
//  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
//  bool IsInitialized() const final;
//
//  ::size_t ByteSizeLong() const final;
//  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
//  ::uint8_t* _InternalSerialize(
//      ::uint8_t* target,
//      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
//  int GetCachedSize() const { return _impl_._cached_size_.Get(); }
//
//  private:
//  void SharedCtor(::google::protobuf::Arena* arena);
//  void SharedDtor();
//  void InternalSwap(S_TEST* other);
// private:
//  friend class ::google::protobuf::internal::AnyMetadata;
//  static ::absl::string_view FullMessageName() { return "Protocol.S_TEST"; }
//
// protected:
//  explicit S_TEST(::google::protobuf::Arena* arena);
//  S_TEST(::google::protobuf::Arena* arena, const S_TEST& from);
//  S_TEST(::google::protobuf::Arena* arena, S_TEST&& from) noexcept
//      : S_TEST(arena) {
//    *this = ::std::move(from);
//  }
//  const ::google::protobuf::MessageLite::ClassData* GetClassData()
//      const final;
//
// public:
//  ::google::protobuf::Metadata GetMetadata() const final;
//  // nested types ----------------------------------------------------
//
//  // accessors -------------------------------------------------------
//  enum : int {
//    kBuffsFieldNumber = 4,
//    kIdFieldNumber = 1,
//    kHpFieldNumber = 2,
//    kAttackFieldNumber = 3,
//  };
//  // repeated .Protocol.BuffData buffs = 4;
//  int buffs_size() const;
//  private:
//  int _internal_buffs_size() const;
//
//  public:
//  void clear_buffs() ;
//  ::Protocol::BuffData* mutable_buffs(int index);
//  ::google::protobuf::RepeatedPtrField<::Protocol::BuffData>* mutable_buffs();
//
//  private:
//  const ::google::protobuf::RepeatedPtrField<::Protocol::BuffData>& _internal_buffs() const;
//  ::google::protobuf::RepeatedPtrField<::Protocol::BuffData>* _internal_mutable_buffs();
//  public:
//  const ::Protocol::BuffData& buffs(int index) const;
//  ::Protocol::BuffData* add_buffs();
//  const ::google::protobuf::RepeatedPtrField<::Protocol::BuffData>& buffs() const;
//  // uint64 id = 1;
//  void clear_id() ;
//  ::uint64_t id() const;
//  void set_id(::uint64_t value);
//
//  private:
//  ::uint64_t _internal_id() const;
//  void _internal_set_id(::uint64_t value);
//
//  public:
//  // uint32 hp = 2;
//  void clear_hp() ;
//  ::uint32_t hp() const;
//  void set_hp(::uint32_t value);
//
//  private:
//  ::uint32_t _internal_hp() const;
//  void _internal_set_hp(::uint32_t value);
//
//  public:
//  // uint32 attack = 3;
//  void clear_attack() ;
//  ::uint32_t attack() const;
//  void set_attack(::uint32_t value);
//
//  private:
//  ::uint32_t _internal_attack() const;
//  void _internal_set_attack(::uint32_t value);
//
//  public:
//  // @@protoc_insertion_point(class_scope:Protocol.S_TEST)
// private:
//  class _Internal;
//  friend class ::google::protobuf::internal::TcParser;
//  static const ::google::protobuf::internal::TcParseTable<
//      2, 4, 1,
//      0, 2>
//      _table_;
//  friend class ::google::protobuf::MessageLite;
//  friend class ::google::protobuf::Arena;
//  template <typename T>
//  friend class ::google::protobuf::Arena::InternalHelper;
//  using InternalArenaConstructable_ = void;
//  using DestructorSkippable_ = void;
//  struct Impl_ {
//    inline explicit constexpr Impl_(
//        ::google::protobuf::internal::ConstantInitialized) noexcept;
//    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
//                          ::google::protobuf::Arena* arena);
//    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
//                          ::google::protobuf::Arena* arena, const Impl_& from);
//    ::google::protobuf::RepeatedPtrField< ::Protocol::BuffData > buffs_;
//    ::uint64_t id_;
//    ::uint32_t hp_;
//    ::uint32_t attack_;
//    mutable ::google::protobuf::internal::CachedSize _cached_size_;
//    PROTOBUF_TSAN_DECLARE_MEMBER
//  };
//  union { Impl_ _impl_; };
//  friend struct ::TableStruct_Protocol_2eproto;
//};
//
//// ===================================================================
//
//
//
//
//// ===================================================================
//
//
//#ifdef __GNUC__
//#pragma GCC diagnostic push
//#pragma GCC diagnostic ignored "-Wstrict-aliasing"
//#endif  // __GNUC__
//// -------------------------------------------------------------------
//
//// BuffData
//
//// uint64 buffId = 1;
//inline void BuffData::clear_buffid() {
//  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
//  _impl_.buffid_ = ::uint64_t{0u};
//}
//inline ::uint64_t BuffData::buffid() const {
//  // @@protoc_insertion_point(field_get:Protocol.BuffData.buffId)
//  return _internal_buffid();
//}
//inline void BuffData::set_buffid(::uint64_t value) {
//  _internal_set_buffid(value);
//  // @@protoc_insertion_point(field_set:Protocol.BuffData.buffId)
//}
//inline ::uint64_t BuffData::_internal_buffid() const {
//  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
//  return _impl_.buffid_;
//}
//inline void BuffData::_internal_set_buffid(::uint64_t value) {
//  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
//  _impl_.buffid_ = value;
//}
//
//// float remainTime = 2;
//inline void BuffData::clear_remaintime() {
//  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
//  _impl_.remaintime_ = 0;
//}
//inline float BuffData::remaintime() const {
//  // @@protoc_insertion_point(field_get:Protocol.BuffData.remainTime)
//  return _internal_remaintime();
//}
//inline void BuffData::set_remaintime(float value) {
//  _internal_set_remaintime(value);
//  // @@protoc_insertion_point(field_set:Protocol.BuffData.remainTime)
//}
//inline float BuffData::_internal_remaintime() const {
//  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
//  return _impl_.remaintime_;
//}
//inline void BuffData::_internal_set_remaintime(float value) {
//  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
//  _impl_.remaintime_ = value;
//}
//
//// repeated uint64 victims = 3;
//inline int BuffData::_internal_victims_size() const {
//  return _internal_victims().size();
//}
//inline int BuffData::victims_size() const {
//  return _internal_victims_size();
//}
//inline void BuffData::clear_victims() {
//  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
//  _impl_.victims_.Clear();
//}
//inline ::uint64_t BuffData::victims(int index) const {
//  // @@protoc_insertion_point(field_get:Protocol.BuffData.victims)
//  return _internal_victims().Get(index);
//}
//inline void BuffData::set_victims(int index, ::uint64_t value) {
//  _internal_mutable_victims()->Set(index, value);
//  // @@protoc_insertion_point(field_set:Protocol.BuffData.victims)
//}
//inline void BuffData::add_victims(::uint64_t value) {
//  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
//  _internal_mutable_victims()->Add(value);
//  // @@protoc_insertion_point(field_add:Protocol.BuffData.victims)
//}
//inline const ::google::protobuf::RepeatedField<::uint64_t>& BuffData::victims() const
//    ABSL_ATTRIBUTE_LIFETIME_BOUND {
//  // @@protoc_insertion_point(field_list:Protocol.BuffData.victims)
//  return _internal_victims();
//}
//inline ::google::protobuf::RepeatedField<::uint64_t>* BuffData::mutable_victims()
//    ABSL_ATTRIBUTE_LIFETIME_BOUND {
//  // @@protoc_insertion_point(field_mutable_list:Protocol.BuffData.victims)
//  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
//  return _internal_mutable_victims();
//}
//inline const ::google::protobuf::RepeatedField<::uint64_t>&
//BuffData::_internal_victims() const {
//  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
//  return _impl_.victims_;
//}
//inline ::google::protobuf::RepeatedField<::uint64_t>* BuffData::_internal_mutable_victims() {
//  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
//  return &_impl_.victims_;
//}
//
//// -------------------------------------------------------------------
//
//// S_TEST
//
//// uint64 id = 1;
//inline void S_TEST::clear_id() {
//  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
//  _impl_.id_ = ::uint64_t{0u};
//}
//inline ::uint64_t S_TEST::id() const {
//  // @@protoc_insertion_point(field_get:Protocol.S_TEST.id)
//  return _internal_id();
//}
//inline void S_TEST::set_id(::uint64_t value) {
//  _internal_set_id(value);
//  // @@protoc_insertion_point(field_set:Protocol.S_TEST.id)
//}
//inline ::uint64_t S_TEST::_internal_id() const {
//  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
//  return _impl_.id_;
//}
//inline void S_TEST::_internal_set_id(::uint64_t value) {
//  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
//  _impl_.id_ = value;
//}
//
//// uint32 hp = 2;
//inline void S_TEST::clear_hp() {
//  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
//  _impl_.hp_ = 0u;
//}
//inline ::uint32_t S_TEST::hp() const {
//  // @@protoc_insertion_point(field_get:Protocol.S_TEST.hp)
//  return _internal_hp();
//}
//inline void S_TEST::set_hp(::uint32_t value) {
//  _internal_set_hp(value);
//  // @@protoc_insertion_point(field_set:Protocol.S_TEST.hp)
//}
//inline ::uint32_t S_TEST::_internal_hp() const {
//  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
//  return _impl_.hp_;
//}
//inline void S_TEST::_internal_set_hp(::uint32_t value) {
//  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
//  _impl_.hp_ = value;
//}
//
//// uint32 attack = 3;
//inline void S_TEST::clear_attack() {
//  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
//  _impl_.attack_ = 0u;
//}
//inline ::uint32_t S_TEST::attack() const {
//  // @@protoc_insertion_point(field_get:Protocol.S_TEST.attack)
//  return _internal_attack();
//}
//inline void S_TEST::set_attack(::uint32_t value) {
//  _internal_set_attack(value);
//  // @@protoc_insertion_point(field_set:Protocol.S_TEST.attack)
//}
//inline ::uint32_t S_TEST::_internal_attack() const {
//  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
//  return _impl_.attack_;
//}
//inline void S_TEST::_internal_set_attack(::uint32_t value) {
//  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
//  _impl_.attack_ = value;
//}
//
//// repeated .Protocol.BuffData buffs = 4;
//inline int S_TEST::_internal_buffs_size() const {
//  return _internal_buffs().size();
//}
//inline int S_TEST::buffs_size() const {
//  return _internal_buffs_size();
//}
//inline void S_TEST::clear_buffs() {
//  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
//  _impl_.buffs_.Clear();
//}
//inline ::Protocol::BuffData* S_TEST::mutable_buffs(int index)
//    ABSL_ATTRIBUTE_LIFETIME_BOUND {
//  // @@protoc_insertion_point(field_mutable:Protocol.S_TEST.buffs)
//  return _internal_mutable_buffs()->Mutable(index);
//}
//inline ::google::protobuf::RepeatedPtrField<::Protocol::BuffData>* S_TEST::mutable_buffs()
//    ABSL_ATTRIBUTE_LIFETIME_BOUND {
//  // @@protoc_insertion_point(field_mutable_list:Protocol.S_TEST.buffs)
//  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
//  return _internal_mutable_buffs();
//}
//inline const ::Protocol::BuffData& S_TEST::buffs(int index) const
//    ABSL_ATTRIBUTE_LIFETIME_BOUND {
//  // @@protoc_insertion_point(field_get:Protocol.S_TEST.buffs)
//  return _internal_buffs().Get(index);
//}
//inline ::Protocol::BuffData* S_TEST::add_buffs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
//  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
//  ::Protocol::BuffData* _add = _internal_mutable_buffs()->Add();
//  // @@protoc_insertion_point(field_add:Protocol.S_TEST.buffs)
//  return _add;
//}
//inline const ::google::protobuf::RepeatedPtrField<::Protocol::BuffData>& S_TEST::buffs() const
//    ABSL_ATTRIBUTE_LIFETIME_BOUND {
//  // @@protoc_insertion_point(field_list:Protocol.S_TEST.buffs)
//  return _internal_buffs();
//}
//inline const ::google::protobuf::RepeatedPtrField<::Protocol::BuffData>&
//S_TEST::_internal_buffs() const {
//  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
//  return _impl_.buffs_;
//}
//inline ::google::protobuf::RepeatedPtrField<::Protocol::BuffData>*
//S_TEST::_internal_mutable_buffs() {
//  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
//  return &_impl_.buffs_;
//}
//
//#ifdef __GNUC__
//#pragma GCC diagnostic pop
//#endif  // __GNUC__
//
//// @@protoc_insertion_point(namespace_scope)
//}  // namespace Protocol
//
//
//// @@protoc_insertion_point(global_scope)
//
//#include "google/protobuf/port_undef.inc"
//
//#endif  // GOOGLE_PROTOBUF_INCLUDED_Protocol_2eproto_2epb_2eh
