


================================================
﻿// helloworld.cpp

/////////////////////////////////////////////////////////////////
// 2023.07.30 공부
// Chapter29 효율적인 C++코드 작성법
/////////////////////////////////////////////////////////////////

#include <iostream>
#include <vector>
#include <string>
#include <format>
#include <utility>
#include <fstream>
#include <filesystem>
#include <ranges>
#include <ratio>
#include <random>
#include <variant>
#include <any>
#include <tuple>
#include <queue>

#include "save.h"

using namespace std;

// 효율을 높이는 두가지 방식
// 1. (언어 수준 효율) 언어를 최대한 효율적으로 사용하는 것이다.
// 2. 설계 수준 효율


// C언어보다 개발과정, 성능, 유지 보수 측면에서 훨씬 유리하고
// C#이나 자바보다 훨씬 실행 속도가 빠를 때가 많다.


// 객체를 효율적으로 다루는 방법
// - 레퍼런스 전달
// - 레퍼런스 리턴
// - 레퍼런스로 익셉션 잡기
// - 이동 의미론 적용
// - 임시 객체 생성 피하기
// - 리턴값 최적화


// 설계 수준 효율
// - 최대한 캐싱하기
// - 객체 풀 활용하기


// 프로파일링
// 비주얼 C++ 2019를 이용한 프로파일링
// 분석 메뉴 -> 프로파일러 메뉴 -> 시작 클릭

// 비주얼 C++ 2022를 이용한 프로파일링은 디버그에서 할 수 있는듯 하다.

int main()
{
	
	save("helloworld.cpp");
}


// Chapter29 효율적인 C++코드 작성법 完


================================================
