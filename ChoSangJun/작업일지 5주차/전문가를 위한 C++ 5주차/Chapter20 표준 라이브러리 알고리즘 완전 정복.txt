


================================================
﻿// helloworld.cpp

/////////////////////////////////////////////////////////////////
// 2023.07.26 공부
// Chapter20 표준 라이브러리 알고리즘 완전 정복
/////////////////////////////////////////////////////////////////

#include <iostream>
#include <vector>
#include <string>
#include <format>
#include <utility>
#include <fstream>
#include <filesystem>
#include <ranges>

#include "save.h"

using namespace std;

// 표준 라이브러리 알고리즘의 가장 큰 장점 - 각 원소의 타입뿐만 아니라 이를 다루는 컨테이너의 타입에도 독립적이다.
// 대부분 STL에서 배운 내용

// find, find_if 알고리즘 - 주어진 반복자 범위에서 특정한 원소를 검색한다.


// accumulate() 알고리즘 - <algorithm>이 아닌 <numeric>에 정의
// - 원소를 모두 더한다  -> 세번째 인수로 합에 대한 초깃값을 받는다.

// 불변형 순차 알고리즘
// [1] 탐색 알고리즘				ex) find
// [2] 특수 탐색 알고리즘			ex) search() 알고리즘에 원하는 탐색 알고리즘을 옵션으로 지정할 수 있도록 매개변수가 추가
// [3] 비교 알고리즘				ex) equal() - 타입이 서로 다른 컨테이너를 비교할 때 사용하는 것이 좋다.
// [4] 집계 알고리즘				ex) all_of()

// 가변형 순차 알고리즘
// [1] generate() - 반복자 범위를 인수로 받아서 그 범위에 있는 값을 세 번째 인수로 지정한 함수의 리턴값으로 교체한다.
// [2] transform()
// [3] copy()
// [4] move() - <utility>
// [5] replace() 와 replace_if() - 주어진 범위에서 값이나 프레디케이트로 지정한 조건에 일치하는 원소를
//     새 값으로 교체한다.
// [6] erase()
// [7] remove()
// [8] unique() - 같은 원소가 연달아 나오는 부분 삭제
// [9] shuffle()- 셔플!
// [10]sample() - 무작위로 n개 리턴
// [11]reverse() - 주어진 범위에 있는 원소의 순서를 반대로 바꾼다.
// [12]shift()  - C++20에 주어진 범위의 원소를 새로운 위치로 이동시키는 방식으로 시프트하는 shift_left()
//				  shift_right() 알고리즘이 추가되었다.


// 연산 알고리즘
// [1] for_each
// [2] for_each_n

// 분할 알고리즘
// partition_copy()

// 정렬 알고리즘
// sort

// 이진 탐색 알고리즘
// binary_search

// 집합 알고리즘
// includes()

// 최대/최소 알고리즘
// min, max

// 병령 알고리즘 - SIMD
// for_each(), all_of()...

// 제한 버전 알고리즘
// std::ranges

// 수치 처리 알고리즘
// [1] iota
// [2] 리듀스 알고리즘 - 누적, 합계, 압축, 주입, 폴드


int main()
{
	
	save("helloworld.cpp");
}


// Chapter20 표준 라이브러리 알고리즘 완전 정복 完


================================================
