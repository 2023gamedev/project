


================================================
﻿// helloworld.cpp

/////////////////////////////////////////////////////////////////
// 2023.07.26 공부
// Chapter21 스트링 현지화와 정규 표현식
/////////////////////////////////////////////////////////////////

#include <iostream>
#include <vector>
#include <string>
#include <format>
#include <utility>
#include <fstream>
#include <filesystem>
#include <ranges>

#include "save.h"

using namespace std;

// 현지화


// 확장 문자 - 문자를 8비트 또는 1바이트로 완전히 표현할 수 없다.
// wchar_t 확장문자를 사용해야 한다.


// 로케일과 패싯 - 특정한 데이터를 문화적 배경에 따라 그룹으로 묶는 방식을 C++에서는 로케일이라 부른다. 이러한 요소를 패싯
// ko_KR <locale>

// std::locale::global()
//
//void print()
//{
//	stringstream stream;
//	stream << 32767;
//	cout << stream.str() << endl;
//}
//
//print();
//locale::global(locale{ "ko-KR" });
//print();


// 안전하고 사용하기 쉬운 대안을 마련할 때까지는 ICU와 같은 서드파티 라이브러리를 사용하길 추천한다.


// 정규 표현식 <regex>
// 다음과 같이 다양한 스트링 연산에 활용
// - 검증
// - 판단
// - 파싱
// - 변환
// - 반복
// - 토큰화


// 정규 표현식 문법
// ECMAScprit - ECMAScprit 표준 기반의 문법
// basic      - 기본 POSIX 문법
// extended   - 확장된 POSIX 문법
// awk		  - POSIX awk 유틸리티에서 사용하는 문법
// grep		  - POSIX grep 유틸리티에서 사용하는 문법
// egrep      - POSIX grep 유틸리티에서 -E 매개변수를 지정했을 때 사용하는 문법

// 정규 표현식을 처음 접한다면 기본 문법인 ECMAScript를 사용한다.


// 사실 이 부분은 무슨 소리인지 모르겠다.
// ECMAScprit 문법
// [1] 앵커 - ^, $ 스트링의 시작과 끝을 표현
// [2] 와일드 카드 - . 줄바꿈 문자를 제외한 모든 문자를 매치한다.
// [3] 선택 매치 - |는 '또는' 관계를 표현한다.
// [4] 그룹화 - () 부분표현식 또는 캡처 크룹을 표현한다.
// [5] 반복 - 반복 문자 *, +, ?
// [6] 연산 우선순위
// - 원소 -> 한정자 -> 연결 -> 선택
// [7] 문자 집합 매치
// [8] 단어 경계
// [9] 백 레퍼런스
// [10] 양의 미리보기, 음의 미리보기 지원 ?=
// [11] 정규 표현식과 로 스트링 리터럴
// [12] 자주 쓰는 정규 표현식


// regex



// 이 부분은 이해가 너무 힘들어 읽어보는 것으로 마무리 하였다.


int main()
{
	
	save("helloworld.cpp");
}


// Chapter21 스트링 현지화와 정규 표현식 完


================================================
