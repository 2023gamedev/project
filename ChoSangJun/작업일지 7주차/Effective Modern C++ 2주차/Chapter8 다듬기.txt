


================================================
﻿/////////////////////////////////////////////////////////////////
// 2023.08.12 공부
// Chapter8 다듬기
/////////////////////////////////////////////////////////////////

#include <iostream>
#include <vector>
#include <list>
#include <thread>

#include "save.h"

// 항목 41: 이동이 저렴하고 항상 복사되는 복사 가능 매개변수에 대해서는 값 전달을 고려하라
class Password {
public:
    explicit Password(std::string pwd)
        : text(std::move(pwd)) {}

    void changeTo(std::string newPwd) {
        text = std::move(newPwd);
    }

private:
    std::string text;
};

// 값 전달을 사용하라가 아니라 고려하라일 뿐이다.

// 기억해 둘 사항들
// - 왼값 인수의 경우 값 전달 다음의 이동 배정은 참조 전달 다음의 복사 배정보다 훨씬 비쌀 가능성이 있다.
// - 값 전달에서는 잘림 문제가 발생할 수 있으므로, 일반적으로 기반 클래스 매개 변수 형식에 대해서는 값 전달이
//   적합하지 않다.

// 항목 42: 삽입 대신 생성 삽입을 고려하라
// push_back 보다 emplace_back을 사용하라는 내용이다.

// 기억해 둘 사항들
// - 이론적으로, 생성 삽입 함수들은 종종 해당 삽입 버전보다 더 효율적이어야 하며, 덜 효율적인 경우는
//   절대로 없어야한다.
// - 생성 삽입 함수는 삽입 함수라면 거부당했을 형식 변환들을 수행할 수 있다.

int main()
{


    save("EffectiveModernC++Study.cpp");
}


================================================



================================================
﻿/////////////////////////////////////////////////////////////////
// 2023.08.12 공부
// Chapter8 다듬기
/////////////////////////////////////////////////////////////////

#include <iostream>
#include <vector>
#include <list>
#include <thread>

#include "save.h"

// 항목 41: 이동이 저렴하고 항상 복사되는 복사 가능 매개변수에 대해서는 값 전달을 고려하라
class Password {
public:
    explicit Password(std::string pwd)
        : text(std::move(pwd)) {}

    void changeTo(std::string newPwd) {
        text = std::move(newPwd);
    }

private:
    std::string text;
};

// 값 전달을 사용하라가 아니라 고려하라일 뿐이다.

// 기억해 둘 사항들
// - 왼값 인수의 경우 값 전달 다음의 이동 배정은 참조 전달 다음의 복사 배정보다 훨씬 비쌀 가능성이 있다.
// - 값 전달에서는 잘림 문제가 발생할 수 있으므로, 일반적으로 기반 클래스 매개 변수 형식에 대해서는 값 전달이
//   적합하지 않다.

// 항목 42: 삽입 대신 생성 삽입을 고려하라
// push_back 보다 emplace_back을 사용하라는 내용이다.

// 기억해 둘 사항들
// - 이론적으로, 생성 삽입 함수들은 종종 해당 삽입 버전보다 더 효율적이어야 하며, 덜 효율적인 경우는
//   절대로 없어야한다.
// - 생성 삽입 함수는 삽입 함수라면 거부당했을 형식 변환들을 수행할 수 있다.

int main()
{


    save("EffectiveModernC++Study.cpp");
}


================================================
